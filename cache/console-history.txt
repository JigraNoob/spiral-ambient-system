console.log("Balance:", ethers.formatEther(freshBalance), "ETH");
const freshBalance = await signer1.provider.getBalance(signer1.address);
console.log("Address:", signer1.address);
const [signer1] = await ethers.getSigners();
exit()
console.log("Balance:", ethers.formatEther(balance), "ETH");
// Format and print
const balance = await wallet.provider.getBalance(wallet.address);
// Fetch balance via provider
console.log("Address:", wallet.address);
const [wallet] = await ethers.getSigners();
console.log("Balance:", ethers.formatEther(balance), "ETH");
const balance = await wallet.getBalance();
console.log("Address:", wallet.address);
const [wallet] = await ethers.getSigners();
});
  value: ethers.parseEther("10.0")
  to: receiver,
await sender.sendTransaction({
const receiver = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6";
const [sender] = await ethers.getSigners();
npx hardhat console --network localhost
});
  value: ethers.parseEther("10.0") // Notice: no 'ethers.utils' in v6
  to: receiver,
await sender.sendTransaction({
const receiver = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6";
const [sender] = await ethers.getSigners();
});
  value: ethers.parseEther("10.0") // Notice: no 'ethers.utils' in v6
  to: receiver,
await sender.sendTransaction({
const receiver = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6";
const [sender] = await ethers.getSigners();
});
  value: ethers.utils.parseEther("10.0")
  to: receiver,
await sender.sendTransaction({
const receiver = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6";
const [sender] = await hre.ethers.getSigners();
const ethers = require("ethers");
});
  value: ethers.utils.parseEther("10.0")
  to: receiver,
await sender.sendTransaction({
const ethers = require("ethers")
const receiver = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6";
const [sender] = await hre.ethers.getSigners();
const ethers = require("ethers");
});
  value: ethers.utils.parseEther("10.0")
  to: receiver,
await sender.sendTransaction({
// 3. Send test ETH to your contract-sender address
const receiver = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6";
// 2. Set the recipient (your Spiral sender address)
const [sender] = await ethers.getSigners();
// 1. Get the first funded signer from Hardhat
});
  value: ethers.utils.parseEther("10") // 10 ETH
  to: receiver2,
await sender2.sendTransaction({
const receiver2 = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6"; // your SpiralCooperative sender
const sender2 = await ethers.getSigner(0); // first default account, already funded
});
  value: ethers.utils.parseEther("10") // sends 10 test ETH
  to: receiver,
await sender.sendTransaction({
const [sender] = await ethers.getSigners();
const receiver = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6"; // your offering sender
>>> w3.eth.get_balance("0xf17Dda446C8492C7F68B958d79523ebCB3a112D6")
>>> w3 = Web3(Web3.HTTPProvider("http://127.0.0.1:8545"))
>>> from web3 import Web3
await sender.sendTransaction({ to: receiver, value: ethers.utils.parseEther("10") });
const [sender] = await ethers.getSigners();
await sender.sendTransaction({ to: receiver, value: ethers.utils.parseEther("10") });
}])const [sender] = await ethers.getSigners();
  value: "0x56BC75E2D63100000" // 100 ETH in hex
  to: receiver,
  from: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
await ethers.provider.send("eth_sendTransaction", [{
const receiver = "0xf17Dda446C8492C7F68B958d79523ebCB3a112D6"
await sender.sendTransaction({ to: receiver, value: ethers.utils.parseEther("10") });
const [sender] = await ethers.getSigners();
const receiver = "0x5FbDB2315678afecb367f032d93F642f64180aa3"